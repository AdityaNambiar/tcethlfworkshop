FROM ubuntu:18.04

WORKDIR /ErpModel/
# Installing OS tools before moving ahead:
# I'm also bringing in all packages from prereqs script because they used to get installed for every change I made in the script 

# *************************** PREREQS *******************************
RUN su - && \
    apt-get update && \
    apt-get install -y sudo
RUN sudo apt-get install -y curl wget git unzip \
    software-properties-common systemd \ 
    iptables apt-utils  build-essential libssl-dev
RUN sudo apt-add-repository -y ppa:git-core/ppa

RUN echo "# Installing nvm" && \
    sudo apt-get -y install && \
    curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | bash && \
    export NVM_DIR="${HOME}/.nvm"&& \
    [ -s "${NVM_DIR}/nvm.sh" ] && . "${NVM_DIR}/nvm.sh" && \
    [ -s "${NVM_DIR}/bash_completion" ] && . "${NVM_DIR}/bash_completion" && \
    echo "# Installing nodeJS" && \
    nvm install 8.9 && \
    nvm use 8.9
# Install docker: 
RUN sudo apt-get remove -y docker docker-engine docker.io containerd runc
RUN sudo apt-get install -y \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg-agent
RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
RUN sudo add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"
RUN sudo apt-get update && sudo apt-get install -y docker-ce docker-ce-cli containerd.io
RUN adduser --quiet --disabled-password --shell /bin/bash --home /home/fabricuser --gecos "User" fabricuser && \
    echo "fabricuser:fabric" | chpasswd
RUN sudo groupadd docker || true && sudo usermod -aG docker fabricuser 
RUN sudo dockerd || true && sudo service docker restart && docker ps
RUN docker run hello-world

# *************************** PREREQS *******************************


# *************** 
# 1. Install binaries of Fabric v1.2 (adding '-s' so that it does not download 'fabric-samples/' - binaries are downloaded seperately in this case)
# ****************

COPY scripts scripts
# Using the below shell script to run lot of commands is a pain because any single small change leads to doing everything else on the file to repeat itself costing me my internet.
# RUN ./scripts/prereqs-ubuntu-updated.sh
# Above prereqs will install docker as well so I'll have to keep fabric installation after this
RUN curl -sSL http://bit.ly/2ysbOFE | bash -s 1.2.1 1.2.1 0.4.10 -s

# The above prereqs script requires a machine reboot
# (With reference to) https://stackoverflow.com/questions/39712359/how-do-you-install-something-that-needs-restart-in-a-dockerfile
# All the layers of a image (in the image building process) are seperate containers linked with previous layers
# This should mean that subsequent commands / layers should already get a 'rebooted' version with docker and stuff properly installed.

# ***************** 
# 2. Install composer and also set up developement environment 
# https://hyperledger.github.io/composer/latest/installing/development-tools.html
# *****************

# Step 1:
# Below node version must be 8.9 - expected in output:
RUN node -v 
RUN npm install -g composer-cli@0.20
# Step 4 (1):
RUN mkdir ~/fabric-dev-servers && cd ~/fabric-dev-servers && \
    curl -O https://raw.githubusercontent.com/hyperledger/composer-tools/master/packages/fabric-dev-servers/fabric-dev-servers.tar.gz && \
    unzip fabric-dev-servers.zip

# Step 4 (2):
# As per the official documentation for composer (link above), 
# this step also has an environment variable named FABRIC_VERSION. I've added that in docker-compose.yml.
RUN cd ~/fabric-dev-servers && \
    ./downloadFabric.sh

# 3. Copy over all files from host (from ErpModel) to docker
COPY . .
# setup node_modules:
RUN npm i

# N. Use Entrypoint script to setupFabric and stopFabric when container is closing.
ENTRYPOINT [ "./entrypoint-composer.sh" ]